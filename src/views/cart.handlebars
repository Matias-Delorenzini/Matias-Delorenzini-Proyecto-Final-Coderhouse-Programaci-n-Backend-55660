<ul>
    <li><a href="/api/products">üéÅ Productos</a></li>
    <li>üõí Carrito</li>
    <li><a href="/profile">üë§ Mi perfil</a></li>
</ul>

<p>Para disminuir la cantidad a comprar deseada, ingresa un n√∫mero negativo (nota que no podr√°s comprar cantidades negativas):</p>
{{#if productsData}}
<ul>
    {{#each productsData}}
        <li class="product">
            {{product.title}} Stock: {{product.stock}} - Cantidad: {{quantity}} - Precio unitario: $ {{product.price}}
            <button onclick="removeProduct('{{product._id}}')"> Eliminar producto </button>
            <p style="display: none;">{{product._id}}</p>
            <form action="/api/cart/increase-quantity" method="post" id="quantityForm">
                <input type="hidden" name="productId" id="productId" value="{{product._id}}">
                <label for="quantity">Cantidad a a√±adir:</label>
                <input type="number" id="quantity" name="quantityToAdd" required>
                <input type="submit" value="A√±adir Cantidad">
            </form>
        </li>
    {{/each}}
</ul>
<p>Precio total: $ {{totalPrice}}</p>
<button onclick="clearCart()">üóë Vaciar Carrito</button>
<button onclick="purchase()">‚úÖ Confirmar Compra</button>

<p>Recibir√°s un email con tu confirmaci√≥n de compra üìß</p>

{{else}}
    <p>El carrito est√° vac√≠o.</p>
{{/if}}

<script>

    async function clearCart() {
        try {
            const response = await fetch(`/api/cart/clear`, {
                method: 'DELETE'
            });
            } catch (error) {
                console.error('Error al realizar la solicitud para vaciar el carrito:', error);
            } finally {
                window.location.href = "/api/cart";
        }
    }


    async function removeProduct(productId) {
        try {
            const response = await fetch(`/api/cart/removeProduct/${productId}`, {
                method: 'DELETE',
            });
            if (!response.ok) {
                throw new Error(`Error: ${response.status}`);
            }
        } catch (error) {
            console.error('Error al realizar la solicitud para eliminar el producto:', error);
        } finally {
            window.location.href = "/api/cart";
        }
    }


    async function purchase() {
    try {
        const response = await fetch(`/api/cart/purchase`, {
            method: 'POST'
        });

        if (response.ok) {
            const responseText = await response.text();
            document.body.innerHTML = responseText;
        } else {
            throw new Error('Error al realizar la compra');
        }
    } catch (error) {
        console.error('Error al realizar la solicitud para vaciar el carrito:', error);
    }
}


</script>